/**
 * SASS/SCSS/Compass Transcription of Skeleton Responsive Grid 
 * originally authored by Dave Gamache. This translation offers
 * mixins that support fluid and as well as fixed grids to supplement
 * the work that Dave Gamache has done.
 * @author Dennis Thompson <http://www.atomicpages.net>
 * @copyright Copyright (c) 2013 AtomicPages LLC
 * @license MIT
 * @version 1.2.2
 */

// IMPORTS
@import "vars"; // import _vars
@import "mixins"; // import _mixins

/* BASE GRID
 * ------------------------------------------------ */
.container {
	position: relative;
	width: $baseWidth;
	margin: 0 auto;
	padding: 0;
	.column,
	.columns {
		float: left;
		display: inline;
		position: relative;
		margin: {
			left: $baseGutterWidth / 2;
			right: $baseGutterWidth / 2;
    	};
	    /* Nested Column Classes */
	    &.alpha { margin-left: 0; }
	    &.omega { margin-right: 0; }
	}
}
.row { margin-bottom: 20px; }

// @include grid($baseWidth, true); // fluid
@include grid($baseWidth);

/* TABLET (PORTRAIT)
 * ------------------------------------------------ */
@media only screen and (min-width: 768px) and (max-width: 959px) {
	.container {
		width: $tabletWidth;
		.column, .columns {
			margin: {
				left: 10px;
				right: 10px;
			};
			&.alpha {
				margin: {
					left: 0;
					right: 10px;
				};
			}
			&.omega {
				margin: {
					right: 0;
					left: 10px;
				};
			}
		} 
	}
	.alpha.omega {
		margin: {
			left: 0;
			right: 0;
		};
	}
	// @include grid($tabletWidth, true); // fluid
	@include grid($tabletWidth, false, 28px); // fixed
}

/*  MOBILE (PORTRAIT)
 * ------------------------------------------------ */
@media only screen and (max-width: 767px) {
	.container { width: $mobilePortraitWidth; }
	.container .columns,
	.container .column { margin: 0; }
	.container .one.column,
	.container .one.columns,
	.container .two.columns,
	.container .three.columns,
	.container .four.columns,
	.container .five.columns,
	.container .six.columns,
	.container .seven.columns,
	.container .eight.columns,
	.container .nine.columns,
	.container .ten.columns,
	.container .eleven.columns,
	.container .twelve.columns,
	.container .thirteen.columns,
	.container .fourteen.columns,
	.container .fifteen.columns,
	.container .sixteen.columns,
	.container .one-third.column,
	.container .two-thirds.column  { width: $mobilePortraitWidth; }
}

/* MOBILE (LANDSCAPE)
 * ------------------------------------------------ */
@media only screen and (min-width: 480px) and (max-width: 767px) {
	.container { width: $mobileLandscapeWidth; }
	.container .columns,
	.container .column { margin: 0; }
	.container .one.column,
	.container .one.columns,
	.container .two.columns,
	.container .three.columns,
	.container .four.columns,
	.container .five.columns,
	.container .six.columns,
	.container .seven.columns,
	.container .eight.columns,
	.container .nine.columns,
	.container .ten.columns,
	.container .eleven.columns,
	.container .twelve.columns,
	.container .thirteen.columns,
	.container .fourteen.columns,
	.container .fifteen.columns,
	.container .sixteen.columns,
	.container .one-third.column,
	.container .two-thirds.column { width: $mobileLandscapeWidth; }
}

/* CLEARING
 * ------------------------------------------------ */
.container:after { 
	content: "\0020"; 
	display: block; 
	height: 0; 
	clear: both; 
	visibility: hidden; 
}
.clearfix, .row {
	zoom: 1;
	&:before, &:after {
		content: "\0020";
		display: block;
		overflow: hidden;
		visibility: hidden;
		width: 0;
		height: 0;
	}
	&:after { clear: both; }
}
.clear {
	clear: both;
	display: block;
	overflow: hidden;
	visibility: hidden;
	width: 0;
	height: 0;
}